{"ast":null,"code":"export const parseTextFile = content => {\n  const [name, title, ...rest] = content.split('\\n').filter(line => line.trim() !== '');\n  const paragraphs = [];\n  let currentParagraph = [];\n  let inParagraph = false;\n  rest.forEach(line => {\n    if (line.startsWith('===')) {\n      if (inParagraph && currentParagraph.length > 0) {\n        paragraphs.push(currentParagraph.join('\\n'));\n        currentParagraph = [];\n      }\n      inParagraph = !inParagraph;\n    } else if (inParagraph) {\n      currentParagraph.push(line.trim());\n    }\n  });\n\n  // Push the last paragraph if exists\n  if (currentParagraph.length > 0) {\n    paragraphs.push(currentParagraph.join('\\n'));\n  }\n  return {\n    name,\n    title,\n    paragraphs\n  };\n};","map":{"version":3,"names":["parseTextFile","content","name","title","rest","split","filter","line","trim","paragraphs","currentParagraph","inParagraph","forEach","startsWith","length","push","join"],"sources":["/home/apfurlan/react-homepage/my-page/src/components/About/textParser.jsx"],"sourcesContent":["export const parseTextFile = (content) => {\n  const [name, title, ...rest] = content.split('\\n').filter(line => line.trim() !== '');\n  \n  const paragraphs = [];\n  let currentParagraph = [];\n  let inParagraph = false;\n\n  rest.forEach(line => {\n    if (line.startsWith('===')) {\n      if (inParagraph && currentParagraph.length > 0) {\n        paragraphs.push(currentParagraph.join('\\n'));\n        currentParagraph = [];\n      }\n      inParagraph = !inParagraph;\n    } else if (inParagraph) {\n      currentParagraph.push(line.trim());\n    }\n  });\n\n  // Push the last paragraph if exists\n  if (currentParagraph.length > 0) {\n    paragraphs.push(currentParagraph.join('\\n'));\n  }\n\n  return { name, title, paragraphs };\n};"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,OAAO,IAAK;EACxC,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAE,GAAGC,IAAI,CAAC,GAAGH,OAAO,CAACI,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;EAErF,MAAMC,UAAU,GAAG,EAAE;EACrB,IAAIC,gBAAgB,GAAG,EAAE;EACzB,IAAIC,WAAW,GAAG,KAAK;EAEvBP,IAAI,CAACQ,OAAO,CAACL,IAAI,IAAI;IACnB,IAAIA,IAAI,CAACM,UAAU,CAAC,KAAK,CAAC,EAAE;MAC1B,IAAIF,WAAW,IAAID,gBAAgB,CAACI,MAAM,GAAG,CAAC,EAAE;QAC9CL,UAAU,CAACM,IAAI,CAACL,gBAAgB,CAACM,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5CN,gBAAgB,GAAG,EAAE;MACvB;MACAC,WAAW,GAAG,CAACA,WAAW;IAC5B,CAAC,MAAM,IAAIA,WAAW,EAAE;MACtBD,gBAAgB,CAACK,IAAI,CAACR,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACpC;EACF,CAAC,CAAC;;EAEF;EACA,IAAIE,gBAAgB,CAACI,MAAM,GAAG,CAAC,EAAE;IAC/BL,UAAU,CAACM,IAAI,CAACL,gBAAgB,CAACM,IAAI,CAAC,IAAI,CAAC,CAAC;EAC9C;EAEA,OAAO;IAAEd,IAAI;IAAEC,KAAK;IAAEM;EAAW,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}