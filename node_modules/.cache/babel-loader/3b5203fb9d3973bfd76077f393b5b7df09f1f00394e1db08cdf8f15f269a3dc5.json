{"ast":null,"code":"var _jsxFileName = \"/home/apfurlan/react-homepage/my-page/src/components/DataProjects/DataProjects.jsx\";\nimport React from 'react';\nimport './DataProjects.css';\nimport projectsData from '../../data/projects.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('[Projects.jsx] Imported data:', projectsData);\nconst DataProjects = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"projects-title\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"projects-subtitle\",\n        children: \"A showcase of my technical projects and research work.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-grid\",\n        children: projectsData.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-image-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: project.image,\n              alt: project.title,\n              className: \"project-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"project-title\",\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"project-description\",\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-tags\",\n              children: project.tags.map((tag, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tag\",\n                children: tag\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: project.link,\n              className: \"project-link\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-external-link-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), \" View Project\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = DataProjects;\nexport default DataProjects;\n\n//   const projects = [\n//     {\n//         title: \"Kubernetes on AWS\",\n//         description: \"Research and development of novel machine learning algorithms for various applications.\",\n//         image: \"https://alshedivat.github.io/al-folio/assets/img/projects/ml.jpg\",\n//         // tags: [\n//         //     \"Data Engineer\",\n//         //     \"Cloud Computing\",\n//         //     \"Kubernetes\",\n//         //     \"Terraform\"\n//         // ],\n//         link: \"#\"\n//     },\n//     {\n//         title : \"Computer Vision\",\n//         description: \"Developing advanced computer vision systems for object detection and recognition.\",\n//         image: \"https://alshedivat.github.io/al-folio/assets/img/projects/vision.jpg\",\n//         // tags: [\n//         //     \"OpenCV\",\n//         //     \"TensorFlow\",\n//         //     \"Image Processing\"\n//         // ],\n//         link: \"#\"\n//     },\n//     {\n//         title: \"Natural Language Processing\",\n//         description: \"Building models to understand and generate human language.\",\n//         image: \"https://alshedivat.github.io/al-folio/assets/img/projects/nlp.jpg\",\n//         // tags: [\n//         //     \"Transformers\",\n//         //     \"BERT\",\n//         //     \"Text Generation\"\n//         // ],\n//         link: \"#\"\n//     },\n//     {\n//         title: \"Robotics\",\n//         description: \"Designing autonomous systems for real-world applications.\",\n//         image: \"https://alshedivat.github.io/al-folio/assets/img/projects/robotics.jpg\",\n//         // tags: [\n//         //     \"ROS\",\n//         //     \"Control Systems\",\n//         //     \"Autonomy\"\n//         // ],\n//         link: \"#\"\n//     }\n// ];\n\n//     return (\n//     <div className=\"projects-page\">\n//       <header className=\"projects-header\">\n//         <h1>Projects</h1>\n//         <p>A showcase of my technical projects and research work.</p>\n//       </header>\n\n//       <div className=\"projects-container\">\n//         {projects.map((project, index) => (\n//           <div key={index} className=\"project-card\">\n//             <div className=\"project-image\">\n//               <img src={project.image} alt={project.title} />\n//             </div>\n//             <div className=\"project-content\">\n//               <h3>{project.title}</h3>\n//               <p>{project.description}</p>\n//               {/* <div className=\"project-tags\">\n//                 {project.tags.map((tag, i) => (\n//                   <span key={i} className=\"tag\">{tag}</span>\n//                 ))}\n//               </div> */}\n//               {/* <a href={project.link} className=\"project-link\">View Project â†’</a> */}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DataProjects;\nvar _c;\n$RefreshReg$(_c, \"DataProjects\");","map":{"version":3,"names":["React","projectsData","jsxDEV","_jsxDEV","console","log","DataProjects","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","src","image","alt","title","description","tags","tag","i","href","link","_c","$RefreshReg$"],"sources":["/home/apfurlan/react-homepage/my-page/src/components/DataProjects/DataProjects.jsx"],"sourcesContent":["import React from 'react';\n\nimport './DataProjects.css';\nimport projectsData from '../../data/projects.json';\n\nconsole.log('[Projects.jsx] Imported data:', projectsData)\n\nconst DataProjects = () => {\n  return (\n    <div className=\"projects-page\">\n      <div className=\"projects-container\">\n        <h1 className=\"projects-title\">Projects</h1>\n        <p className=\"projects-subtitle\">A showcase of my technical projects and research work.</p>\n        \n        <div className=\"projects-grid\">\n          {projectsData.map((project, index) => (\n            <div key={index} className=\"project-card\">\n              <div className=\"project-image-container\">\n                <img \n                  src={project.image} \n                  alt={project.title} \n                  className=\"project-image\"\n                />\n              </div>\n              <div className=\"project-content\">\n                <h3 className=\"project-title\">{project.title}</h3>\n                <p className=\"project-description\">{project.description}</p>\n                <div className=\"project-tags\">\n                  {project.tags.map((tag, i) => (\n                    <span key={i} className=\"tag\">{tag}</span>\n                  ))}\n                </div>\n                <a href={project.link} className=\"project-link\">\n                  <i className=\"fas fa-external-link-alt\"></i> View Project\n                </a>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataProjects;\n\n//   const projects = [\n//     {\n//         title: \"Kubernetes on AWS\",\n//         description: \"Research and development of novel machine learning algorithms for various applications.\",\n//         image: \"https://alshedivat.github.io/al-folio/assets/img/projects/ml.jpg\",\n//         // tags: [\n//         //     \"Data Engineer\",\n//         //     \"Cloud Computing\",\n//         //     \"Kubernetes\",\n//         //     \"Terraform\"\n//         // ],\n//         link: \"#\"\n//     },\n//     {\n//         title : \"Computer Vision\",\n//         description: \"Developing advanced computer vision systems for object detection and recognition.\",\n//         image: \"https://alshedivat.github.io/al-folio/assets/img/projects/vision.jpg\",\n//         // tags: [\n//         //     \"OpenCV\",\n//         //     \"TensorFlow\",\n//         //     \"Image Processing\"\n//         // ],\n//         link: \"#\"\n//     },\n//     {\n//         title: \"Natural Language Processing\",\n//         description: \"Building models to understand and generate human language.\",\n//         image: \"https://alshedivat.github.io/al-folio/assets/img/projects/nlp.jpg\",\n//         // tags: [\n//         //     \"Transformers\",\n//         //     \"BERT\",\n//         //     \"Text Generation\"\n//         // ],\n//         link: \"#\"\n//     },\n//     {\n//         title: \"Robotics\",\n//         description: \"Designing autonomous systems for real-world applications.\",\n//         image: \"https://alshedivat.github.io/al-folio/assets/img/projects/robotics.jpg\",\n//         // tags: [\n//         //     \"ROS\",\n//         //     \"Control Systems\",\n//         //     \"Autonomy\"\n//         // ],\n//         link: \"#\"\n//     }\n// ];\n\n\n//     return (\n//     <div className=\"projects-page\">\n//       <header className=\"projects-header\">\n//         <h1>Projects</h1>\n//         <p>A showcase of my technical projects and research work.</p>\n//       </header>\n\n//       <div className=\"projects-container\">\n//         {projects.map((project, index) => (\n//           <div key={index} className=\"project-card\">\n//             <div className=\"project-image\">\n//               <img src={project.image} alt={project.title} />\n//             </div>\n//             <div className=\"project-content\">\n//               <h3>{project.title}</h3>\n//               <p>{project.description}</p>\n//               {/* <div className=\"project-tags\">\n//                 {project.tags.map((tag, i) => (\n//                   <span key={i} className=\"tag\">{tag}</span>\n//                 ))}\n//               </div> */}\n//               {/* <a href={project.link} className=\"project-link\">View Project â†’</a> */}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DataProjects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}